import { supabase } from '../src/config/supabaseClient.js';

async function checkTableStructure() {
  try {
    console.log('üîç Verificando estrutura da tabela requests...\n');

    // Tentar buscar uma requisi√ß√£o com todas as colunas
    const { data: request, error } = await supabase
      .from('requests')
      .select('*')
      .limit(1)
      .single();

    if (error) {
      console.log('‚ùå Erro ao buscar requisi√ß√£o:', error.message);
      return;
    }

    console.log('‚úÖ Estrutura da tabela requests:');
    console.log('üìã Colunas dispon√≠veis:');
    
    Object.keys(request).forEach((column, index) => {
      console.log(`   ${index + 1}. ${column}: ${typeof request[column]} (${request[column]})`);
    });

    console.log('\nüîç Verificando colunas espec√≠ficas...');
    
    const specificColumns = [
      'returned_at',
      'returned_by', 
      'return_notes',
      'executed_at',
      'executed_by',
      'approved_at',
      'approved_by'
    ];

    for (const column of specificColumns) {
      if (request.hasOwnProperty(column)) {
        console.log(`   ‚úÖ ${column}: ${request[column]}`);
      } else {
        console.log(`   ‚ùå ${column}: N√ÉO EXISTE`);
      }
    }

  } catch (error) {
    console.error('‚ùå Erro durante a verifica√ß√£o:', error);
  }
}

checkTableStructure(); 